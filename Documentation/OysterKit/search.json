{"Typealiases.html#/s:9OysterKit6Parsera":{"name":"Parser","abstract":"<p>Depricated, use <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Grammar.html\">Grammar</a></code></p>"},"Typealiases.html#/s:9OysterKit8Languagea":{"name":"Language","abstract":"<p>Depricated, use <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Grammar.html\">Grammar</a></code></p>"},"Typealiases.html#/s:9OysterKit13StreamedTokena":{"name":"StreamedToken","abstract":"<p>The elements generated during streaming. These are very light-weight and are the same"},"Typealiases.html#/s:9OysterKit15RuleAnnotationsa":{"name":"RuleAnnotations","abstract":"<p>A dictionary of annotations and their values</p>"},"Typealiases.html#/s:9OysterKit4Testa":{"name":"Test","abstract":"<p>A matching closure should perform the test using the lexer, create any nodes it wishes"},"Structs/StringToken.html#/s:9OysterKit11StringTokenV8rawValueSivp":{"name":"rawValue","abstract":"<p>The <code>Int</code> identifier of the Token. It is automatically generated</p>","parent_name":"StringToken"},"Structs/StringToken.html#/s:9OysterKit11StringTokenVyACSScfc":{"name":"init(_:)","abstract":"<p>Create a new token instance</p>","parent_name":"StringToken"},"Structs/StringToken.html#/s:9OysterKit11StringTokenV11descriptionSSvp":{"name":"description","abstract":"<p>A human readable representation of the token</p>","parent_name":"StringToken"},"Structs/EndOfFile.html#/s:9OysterKit8TerminalP4test5lexer9producingyAA15LexicalAnalyzer_p_AA9TokenType_pSgtKF":{"name":"test(lexer:producing:)","parent_name":"EndOfFile"},"Structs/EndOfFile.html#/s:9OysterKit8TerminalP16matchDescriptionSSvp":{"name":"matchDescription","parent_name":"EndOfFile"},"Structs/EndOfFile.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"EndOfFile"},"Structs/EndOfFile.html#/s:9OysterKit9EndOfFileVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"EndOfFile"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV14minimumMatchesSivp":{"name":"minimumMatches","abstract":"<p>The minimum number of matches, must be &gt;= 0</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV14maximumMatchesSiSgvp":{"name":"maximumMatches","abstract":"<p>The maximum number of matches. If nil, any number can be matched</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityVyACs16PartialRangeFromVySiGcfc":{"name":"init(_:)","abstract":"<p>Creates a new range from the supplied partial range meaning that the number","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityVyACSNySiGcfc":{"name":"init(_:)","abstract":"<p>Creates a new range from the supplied closed range meaning that the number","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV3oneACvpZ":{"name":"one","abstract":"<p>A pre-specified constant for one and exactly one matches</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV9zeroOrOneACvpZ":{"name":"zeroOrOne","abstract":"<p>A pre-specified constant for optional matches (between 0 and 1 matches)</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV10zeroOrMoreACvpZ":{"name":"zeroOrMore","abstract":"<p>A pre-specified constant for optional but unbound matches (between 0 and infinity matches)</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV9oneOrMoreACvpZ":{"name":"oneOrMore","abstract":"<p>A pre-specified constant for required but unbound matches (between 1 and infinity matches)</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>The equality function</p>","parent_name":"Cardinality"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO8skippingyA2EmF":{"name":"skipping","abstract":"<p>Do not include any matches in the bounds of the match</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO8scanningyA2EmF":{"name":"scanning","abstract":"<p>Do not create structure but do include in the bounds of the match</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO10structuralyAeA9TokenType_p_tcAEmF":{"name":"structural(token:)","abstract":"<p>Include in the bounds of the match and create a structural node in the AST</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO2eeoiySbAE_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two kinds</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html":{"name":"Kind","abstract":"<p>Captures scanning/parsing behaviour indicating identifying if the rule should create tokens","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV9lookaheadSbvp":{"name":"lookahead","abstract":"<p>The rule should be matched, but if lookahead is true the scanner head position should be","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV6negateSbvp":{"name":"negate","abstract":"<p>The result of matching should be negated.</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV4kindAC4KindOvp":{"name":"kind","abstract":"<p>The kind of rule, skipping, scanning, or structural (see above)</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV11cardinalityAA11CardinalityVvp":{"name":"cardinality","abstract":"<p>The cardinatlity of the matches</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV5tokenAA9TokenType_pSgvp":{"name":"token","abstract":"<p>The token produced if structural or nil otherwise</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV_11cardinality7negated9lookaheadA2C4KindO_SNySiGS2btcfc":{"name":"init(_:cardinality:negated:lookahead:)","abstract":"<p>Constructs a new instance of the struct with the specified parameters. All except kind can be excluded resulting","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV_11cardinality7negated9lookaheadA2C4KindO_s16PartialRangeFromVySiGS2btcfc":{"name":"init(_:cardinality:negated:lookahead:)","abstract":"<p>Constructs a new instance of the struct with the specified parameters. All except kind can be excluded resulting","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV_11cardinality7negated9lookaheadA2C4KindO_AA11CardinalityVS2btcfc":{"name":"init(_:cardinality:negated:lookahead:)","abstract":"<p>Constructs a new instance of the struct with the specified parameters. All except kind can be excluded resulting","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV12instanceWith_11cardinality7negated9lookaheadA2C4KindOSg_SNySiGSgSbSgAMtF":{"name":"instanceWith(_:cardinality:negated:lookahead:)","abstract":"<p>Creates a new instance with the specified parameters changed. All have defaults and any that are excluded will maintain their current","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV12instanceWith_11cardinality7negated9lookaheadA2C4KindOSg_s16PartialRangeFromVySiGSgSbSgAOtF":{"name":"instanceWith(_:cardinality:negated:lookahead:)","abstract":"<p>Creates a new instance with the specified parameters changed. All have defaults and any that are excluded will maintain their current","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV8describe5match22requiresScanningPrefix0f10StructuralH013annotatedWithS2S_S2bSDyAA14RuleAnnotationOAA0lM5ValueOGtF":{"name":"describe(match:requiresScanningPrefix:requiresStructuralPrefix:annotatedWith:)","abstract":"<p>Takes a description of a match and wraps it in the behavioural annotations of the rule</p>","parent_name":"Behaviour"},"Structs/ProcessingErrorType.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV8rawValueACSi_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified rawValue. Supported types are all captured with static constants and you should not need this</p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV4fromACs0D0_p_tcfc":{"name":"init(from:)","abstract":"<p>Creates a new instance classifying the supplied error</p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV7foreignACvpZ":{"name":"foreign","abstract":"<p>A non OysterKit error</p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV8internalACvpZ":{"name":"internal","abstract":"<p>An internal <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProcessingError.html\">ProcessingError</a></code></p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV9undefinedACvpZ":{"name":"undefined","abstract":"<p>An undefined <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProcessingError.html\">ProcessingError</a></code></p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV8scanningACvpZ":{"name":"scanning","abstract":"<p>A scanning <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProcessingError.html\">ProcessingError</a></code></p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV7parsingACvpZ":{"name":"parsing","abstract":"<p>A parsing <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProcessingError.html\">ProcessingError</a></code></p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV14interpretationACvpZ":{"name":"interpretation","abstract":"<p>An interpretation <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProcessingError.html\">ProcessingError</a></code></p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV5fatalACvpZ":{"name":"fatal","abstract":"<p>A fatal <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProcessingError.html\">ProcessingError</a></code></p>","parent_name":"ProcessingErrorType"},"Structs/ProcessingErrorType.html#/s:9OysterKit19ProcessingErrorTypeV18scannedMatchFailedACvpZ":{"name":"scannedMatchFailed","abstract":"<p>A low level scanner (not scanning) error</p>","parent_name":"ProcessingErrorType"},"Structs/ParsingDecoder.html#/s:9OysterKit14ParsingDecoderVACycfc":{"name":"init()","abstract":"<p>Create an instance of <code>ParsingDecoder</code></p>","parent_name":"ParsingDecoder"},"Structs/ParsingDecoder.html#/s:9OysterKit14ParsingDecoderV6decode_5usingxxm_AA28DecodeableAbstractSyntaxTree_ptKSeRzlF":{"name":"decode(_:using:)","abstract":"<p>Decodes the supplied data using the supplied parser into the specified object. The names of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code>s generated by the","parent_name":"ParsingDecoder"},"Structs/ParsingDecoder.html#/s:9OysterKit14ParsingDecoderV6decode_4from5usingxxm_SSAA7Grammar_ptKSeRzlF":{"name":"decode(_:from:using:)","abstract":"<p>Decodes the supplied data using the supplied parser into the specified object. The names of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code>s generated by the","parent_name":"ParsingDecoder"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV4with4fromAcA014AbstractSyntaxD11ConstructorC30IntermediateRepresentationNodeV_SStKcfc":{"name":"init(with:from:)","abstract":"<p>Creates a new instance using the supplied intermediate representation and source</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV4with8matching8children11annotationsAcA9TokenType_p_SSSayACGSDyAA14RuleAnnotationOAA0kL5ValueOGtcfc":{"name":"init(with:matching:children:annotations:)","abstract":"<p>Creates a new instance of the node using the supplied parameters. You do not normally need to call this as nodes","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV5tokenAA9TokenType_pvp":{"name":"token","abstract":"<p>The captured <code>Token</code></p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV13matchedStringSSvp":{"name":"matchedString","abstract":"<p>The <code>String</code> that was matched to satisfy the rules for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV5tokenAA9TokenType_pvp\">token</a></code>.</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV8childrenSayACGvp":{"name":"children","abstract":"<p>Any sub-nodes in the tree</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV11annotationsSDyAA14RuleAnnotationOAA0fG5ValueOGvp":{"name":"annotations","abstract":"<p>Any associated annotations made on the node</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeVyACSgSScip":{"name":"subscript(_:)","abstract":"<p>Access a child based on the name of the token of the child</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeVyACSicip":{"name":"subscript(_:)","abstract":"<p>Access a child based on the index of the child</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV11descriptionSSvp":{"name":"description","abstract":"<p>A well formatted description of this branch of the tree</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV11stringValueSSvp":{"name":"stringValue","abstract":"<p>The string that was captured by this node</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV3keys9CodingKey_pvp":{"name":"key","abstract":"<p>The <code>CodingKey</code> for this node. This is normally generated using the name of the","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV8contentsSayAA024DecodeableAbstractSyntaxD0_pGvp":{"name":"contents","abstract":"<p>The children of this node</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html":{"name":"HomogenousTree","abstract":"<p>HomogenousTree is used as the default form of AbstractSyntaxTree. Each node in the tree captures its <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code>, the <code>String</code> it mtached, and any children.</p>"},"Structs/ParsingDecoder.html":{"name":"ParsingDecoder","abstract":"<p>A standard decoder that can use any supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit6Parsera\">Parser</a></code> to decode <code>Data</code> into a <code>Decodable</code> conforming type.</p>"},"Structs/ProcessingErrorType.html":{"name":"ProcessingErrorType","abstract":"<p>Represents the type of processing error.</p>"},"Structs/Behaviour.html":{"name":"Behaviour","abstract":"<p><code>Behaviour</code> represents a complete description of the required behaviour of any given"},"Structs/Cardinality.html":{"name":"Cardinality","abstract":"<p>Represents the cardinality of a rule. It can be specified as a closed range,"},"Structs/EndOfFile.html":{"name":"EndOfFile","abstract":"<p>Undocumented</p>"},"Structs/StringToken.html":{"name":"StringToken","abstract":"<p>A generic <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code> implementation that is labelled (has an associated `<code>String</code>). The value is automatically generated</p>"},"Protocols/Rule.html#/s:9OysterKit4RuleP9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>The behaviour for the rule controlling things like cardinality and lookahead</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP11annotationsSDyAA0C10AnnotationOAA0cE5ValueOGvp":{"name":"annotations","abstract":"<p>The annotations on the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>This function implements the actual test. It is responsible soley for performing","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP4rule4with11annotationsAaB_pAA9BehaviourVSg_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"rule(with:annotations:)","abstract":"<p>Creates a rule with the specified behaviour and annotations.</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abrieviated description of the rule that should reflect behaviour, but not annotations","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP5match4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","abstract":"<p>Should perform the actual check and manage the communicaion with the supplied <code>IntermedidateRepresentation</code>. If the match fails, and that failure cannot","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE5parse2asAaB_pAA9TokenType_p_tF":{"name":"parse(as:)","abstract":"<p>Changes the behaviour (or creates a rule with the behaviour) to create a token.</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE13annotatedWithyAaB_pSDyAA0C10AnnotationOAA0cF5ValueOGF":{"name":"annotatedWith(_:)","abstract":"<p>Creates a new instance of the rule annotated with the specified annotations.","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE7requireyAaB_pAA11CardinalityVF":{"name":"require(_:)","abstract":"<p>Creates a new instance of the rule that requires matches of the specified","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE9lookaheadAaB_pyF":{"name":"lookahead()","abstract":"<p>Creates a new instance of the rule set to have lookahead behaviour</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE6negateAaB_pyF":{"name":"negate()","abstract":"<p>Creates a new instance of the rule which negates its match.","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE4skipAaB_pyF":{"name":"skip()","abstract":"<p>Creates a new instance of the rule which skips.</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE4scanAaB_pyF":{"name":"scan()","abstract":"<p>Creates a new instance of the rule which scans.</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE9reference_11annotationsAaB_pAA9BehaviourV4KindO_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"reference(_:annotations:)","abstract":"<p>Undocumented</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE5errorSSSgvp":{"name":"error","abstract":"<p>The user specified (in an annotation) error associated with the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAEyAA0C15AnnotationValueOSgAA0cD0Ocip":{"name":"subscript(_:)","abstract":"<p>Returns the value of the specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RuleAnnotationValue.html\">RuleAnnotationValue</a></code> identified by <code>annotation</code> if present</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE10structuralSbvp":{"name":"structural","abstract":"<p><code>true</code> if the rule creates ndoes, false otherwise</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8skippingSbvp":{"name":"skipping","abstract":"<p><code>true</code> if the rule creates ndoes, false otherwise</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8scanningSbvp":{"name":"scanning","abstract":"<p><code>true</code> if the rule creates ndoes, false otherwise</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8evaluate_5using3andyyAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKc_AaG_pAaH_ptKF":{"name":"evaluate(_:using:and:)","abstract":"<p>Standard implementation that applies the behaviour of the rule.</p>","parent_name":"Rule"},"Protocols/TokenType.html#/s:9OysterKit9TokenTypeP8rawValueSivp":{"name":"rawValue","abstract":"<p>A rawValue that unless the token is transient should be unique</p>","parent_name":"TokenType"},"Protocols/TokenType.html#/s:9OysterKit9TokenTypePAAE4fromyAA4Rule_pAaE_pF":{"name":"from(_:)","abstract":"<p>Creates an instance of the rule producer that will generate the token when satisfied</p>","parent_name":"TokenType"},"Protocols/TokenType.html#/s:9OysterKit9TokenTypePAAE2eeoiySbAaB_p_AaB_ptFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"TokenType"},"Protocols/Terminal.html#/s:9OysterKit8TerminalP4test5lexer9producingyAA15LexicalAnalyzer_p_AA9TokenType_pSgtKF":{"name":"test(lexer:producing:)","abstract":"<p>Tests the the <code>Terminal</code> is available at the current scanner head position,","parent_name":"Terminal"},"Protocols/Terminal.html#/s:9OysterKit8TerminalP16matchDescriptionSSvp":{"name":"matchDescription","abstract":"<p>Provides a textual description of the match</p>","parent_name":"Terminal"},"Protocols/Terminal.html#/s:9OysterKit4RuleP4rule4with11annotationsAaB_pAA9BehaviourVSg_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"rule(with:annotations:)","parent_name":"Terminal"},"Protocols/Terminal.html#/s:9OysterKit4RuleP4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","parent_name":"Terminal"},"Protocols/Terminal.html#/s:9OysterKit4RuleP16shortDescriptionSSvp":{"name":"shortDescription","parent_name":"Terminal"},"Protocols/Terminal.html#/s:9OysterKit4RuleP9behaviourAA9BehaviourVvp":{"name":"behaviour","parent_name":"Terminal"},"Protocols/Terminal.html#/s:9OysterKit4RuleP11annotationsSDyAA0C10AnnotationOAA0cE5ValueOGvp":{"name":"annotations","parent_name":"Terminal"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationPxycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP10evaluatingyyAA9TokenType_pF":{"name":"evaluating(_:)","abstract":"<p>Called when the parser is about to evaluate a structural rule. This is an oppertunity to prepare any appropriate data structures.</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP9succeeded5token11annotations5rangeyAA9TokenType_p_SDyAA14RuleAnnotationOAA0kL5ValueOGSnySS5IndexVGtF":{"name":"succeeded(token:annotations:range:)","abstract":"<p>Called after the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code> has been successfully matched (or an ignorable failure for a pinned token)</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP6failedyyF":{"name":"failed()","abstract":"<p>Called when a token being evaluated failed to be matched</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP13willBuildFrom6source4withySS_AA7Grammar_ptF":{"name":"willBuildFrom(source:with:)","abstract":"<p>Called when the parser starts evaluation providing an oppertunity for the AST to prepare it&rsquo;s internal state.</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP8didBuildyyF":{"name":"didBuild()","abstract":"<p>Called when parsing of the source is complete.</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP10resetStateyyF":{"name":"resetState()","abstract":"<p>Called if the state of parsing should be completely reset</p>","parent_name":"IntermediateRepresentation"},"Protocols/Node.html#/s:9OysterKit4NodeP5tokenAA9TokenType_pvp":{"name":"token","abstract":"<p>The token representing the match</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range of the match in the original source</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP11annotationsSDyAA14RuleAnnotationOAA0eF5ValueOGvp":{"name":"annotations","abstract":"<p>Annotations that were made on the token</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP8childrenSayxGvp":{"name":"children","abstract":"<p>Any sub-nodes in the tree</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP3for2at11annotationsxAA9TokenType_p_SnySS5IndexVGSDyAA14RuleAnnotationOAA0jK5ValueOGtcfc":{"name":"init(for:at:annotations:)","abstract":"<p>Create a new instance of the node</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodePAAE11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the <code>Node</code></p>","parent_name":"Node"},"Protocols/AbstractSyntaxTree.html#/s:9OysterKit18AbstractSyntaxTreeP4with4fromxAA0cdE11ConstructorC30IntermediateRepresentationNodeV_SStKcfc":{"name":"init(with:from:)","abstract":"<p>Create a new instance of the object using the supplied node</p>","parent_name":"AbstractSyntaxTree"},"Protocols/Grammar.html#/s:9OysterKit7GrammarP5rulesSayAA4Rule_pGvp":{"name":"rules","abstract":"<p>The rules in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit8Languagea\">Language</a></code>&lsquo;s grammar</p>","parent_name":"Grammar"},"Protocols/Grammar.html#/s:9OysterKit7GrammarPAAE8tokenizeyAA11TokenStreamCSSF":{"name":"tokenize(_:)","abstract":"<p>Creates an iterable stream of tokens using the supplied source and this <code>Grammar</code></p>","parent_name":"Grammar"},"Protocols/Grammar.html#/s:9OysterKit7GrammarPAAE5parseyAA14HomogenousTreeVSSKF":{"name":"parse(_:)","abstract":"<p>Creates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HomogenousTree.html\">HomogenousTree</a></code> using the supplied grammar.</p>","parent_name":"Grammar"},"Protocols/Grammar.html#/s:9OysterKit7GrammarPAAE5build_2asqd__SS_qd__mtKSeRd__lF":{"name":"build(_:as:)","abstract":"<p>Builds the supplied source into a Heterogeneous representation (any Swift <code>Decodable</code> type).</p>","parent_name":"Grammar"},"Protocols/LexicalContext.html#/s:9OysterKit14LexicalContextP5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4markyyF\">LexicalAnalyzer.mark()</a></code> to the point at which <code>LexicalAnalyzer.proceed()-&gt;LexicalContext</code> was called</p>","parent_name":"LexicalContext"},"Protocols/LexicalContext.html#/s:9OysterKit14LexicalContextP6sourceSSvp":{"name":"source","abstract":"<p>The string being scanned</p>","parent_name":"LexicalContext"},"Protocols/LexicalContext.html#/s:9OysterKit14LexicalContextP13matchedStringSSvp":{"name":"matchedString","abstract":"<p>The substring that was matched and is catpured by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html#/s:9OysterKit14LexicalContextP5rangeSnySS5IndexVGvp\">range</a></code></p>","parent_name":"LexicalContext"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6sourcexSS_tcfc":{"name":"init(source:)","abstract":"<p>Creates a new instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html\">Lexer</a></code> for the supplied <code>String</code>.</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP7currentSSvp":{"name":"current","abstract":"<p>The character currently being evaluated</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP5depthSivp":{"name":"depth","abstract":"<p>The depth of the look-ahead stack</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4markyyF":{"name":"mark()","abstract":"<p>: Marks the current position. This must be followed by a matching rewind() or proceed()</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4mark8skippingySb_tF":{"name":"mark(skipping:)","abstract":"<p>Marks the current location and signifies that the scanning is actually skipping</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6rewindyyF":{"name":"rewind()","abstract":"<p>: Discards the current mark, rewinding the scanner to that position</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP7proceedAA0C7Context_pyF":{"name":"proceed()","abstract":"<p>: Discards the current mark, but leaving the scanner at it&rsquo;s current location</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP10endOfInputSbvp":{"name":"endOfInput","abstract":"<p>Should return <code>true</code> if the end of the source <code>String</code> has been reached</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4scan8terminalySS_tKF":{"name":"scan(terminal:)","abstract":"<p>Scan until the specified terminal is reached in the source <code>String</code>. If the end of the <code>String</code> is reached before","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4scan5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scan(oneOf:)","abstract":"<p>Scan until one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4scan17regularExpressionySo09NSRegularG0C_tKF":{"name":"scan(regularExpression:)","abstract":"<p>Scan the supplied regular expression (<code>NSRegularExpression</code>). If not found an <code>Error</code> should be the thrown. The scanner","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8scanUpTo8terminalySS_tKF":{"name":"scanUpTo(terminal:)","abstract":"<p>Scan up to (that is, the position of the scanner should be at the start of the match, not after it) the supplied <code>String</code>. If the terminal is not found","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8scanUpTo5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scanUpTo(oneOf:)","abstract":"<p>Scan up to one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8scanNextyyKF":{"name":"scanNext()","abstract":"<p>Advances the scanner one character. If the end of the source <code>String</code> has already been reached a <code>Error</code> should be thrown.</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerPySSSnySS5IndexVGcip":{"name":"subscript(_:)","abstract":"<p>Should return the <code>String</code> from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6sourceSSvp\">source</a></code> representing the supplied range.</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6sourceSSvp":{"name":"source","abstract":"<p>Should return the <code>String</code> being analyzed</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8positionSivp":{"name":"position","abstract":"<p>Should return the integer offset of the current scanning position in charactes</p>","parent_name":"LexicalAnalyzer"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypeP8causedBySays0D0_pGSgvp":{"name":"causedBy","abstract":"<p>Any errors which can be rolled up into this error</p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypeP5rangeSNySS5IndexVGSgvp":{"name":"range","abstract":"<p>The range of the error in the source <code>String</code></p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypeP7messageSSvp":{"name":"message","abstract":"<p>The message associated with the error</p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypeP7isFatalSbvp":{"name":"isFatal","abstract":"<p>The error should stop subsequent processing</p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypePAAE11descriptionSSvp":{"name":"description","abstract":"<p>A textural description of the error</p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypePAAE16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A more detailed description of the error including the hierarchy of errors that built to this error</p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypePAAE8hasCause11descriptionSbSS_tF":{"name":"hasCause(description:)","abstract":"<p>Returns true if the supplied error includes the supplied description in its description</p>","parent_name":"CausalErrorType"},"Protocols/CausalErrorType.html#/s:9OysterKit15CausalErrorTypePAAE09formattedD7Message2inS2S_tF":{"name":"formattedErrorMessage(in:)","abstract":"<p>Provides a formatted version of the error message suitable for printing in a fixed width font, with a pointer highlighting the","parent_name":"CausalErrorType"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP11stringValueSSvp":{"name":"stringValue","abstract":"<p>The String the was matched for the node</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP3keys9CodingKey_pvp":{"name":"key","abstract":"<p>Should be the <code>CodingKey</code> for this node. This is normally generated using the name of the <code>Token</code>.</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP8contentsSayAaB_pGvp":{"name":"contents","abstract":"<p>Should be the children of this node</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreePyAaB_pSicip":{"name":"subscript(_:)","abstract":"<p>Should return the child node at the supplied <code>index</code>. A default implementation is provided through an extension.</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP3keyAaB_pSgs9CodingKey_p_tcip":{"name":"subscript(key:)","abstract":"<p>Should return the child node with the specified <code>CodingKey</code> or <code>nil</code> if it does not exist. A default implementation","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreePyAaB_pSgSScip":{"name":"subscript(_:)","abstract":"<p>Should return the child node with the specified <code>String</code> as a key or <code>nil</code> if it does not exist. A default implementation","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html":{"name":"DecodeableAbstractSyntaxTree","abstract":"<p>This protocol identifies as set of additional requirements for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code>s in order for them to be used for decoding.  Some elements of the implementation are"},"Protocols/CausalErrorType.html":{"name":"CausalErrorType","abstract":"<p>An error type that captures not just a current error, but the hierarchy of"},"Protocols/LexicalAnalyzer.html":{"name":"LexicalAnalyzer","abstract":"<p>The job of an implementation of this protocol is two fold</p>"},"Protocols/LexicalContext.html":{"name":"LexicalContext","abstract":"<p>A lexical context summarises the of a <code>String</code> being scanned by a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> between two marks. It is generated when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> is advanced"},"Protocols/Grammar.html":{"name":"Grammar","abstract":"<p>A language stores a set of grammar rules that can be used to parse <code>String</code>s. Extensions provide additional methods (such as parsing) that operate on these rules.</p>"},"Protocols/AbstractSyntaxTree.html":{"name":"AbstractSyntaxTree","abstract":"<p>Abstract Syntax Trees are responsible to for taking an IntermediateRepresentation and building a data structure suitable for semantic analysis</p>"},"Protocols/Node.html":{"name":"Node","abstract":"<p>Nodes are the basic elements of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code>s. They record a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code>, the range of the <code>String</code>&lsquo;s <code>UnicodeScalarView</code> the match occured in"},"Protocols/IntermediateRepresentation.html":{"name":"IntermediateRepresentation","abstract":"<p>An <code>IntermediateRepresentation</code> is responsible for building this structure, typically some kind of Abstract Syntax Tree (AST)."},"Protocols/Terminal.html":{"name":"Terminal","abstract":"<p>Undocumented</p>"},"Protocols/TokenType.html":{"name":"TokenType","abstract":"<p><code>TokenType</code>s are generated when rules are matched (usually, sometime a rule just advances the scan-head). Tokens with a <code>rawValue</code> of -1 are considered transient, meaning that they should not be included in any construction of an AST. However, they may provide context to the AST.</p>"},"Protocols/Rule.html":{"name":"Rule","abstract":"<p>Behavioural rule is both an extension to and ultimately a replacement for current"},"Functions.html#/s:9OysterKit8areEqual3lhs3rhsSbSDyAA14RuleAnnotationOAA0gH5ValueOG_AItF":{"name":"areEqual(lhs:rhs:)","abstract":"<p>Compares two <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit15RuleAnnotationsa\">RuleAnnotations</a></code></p>"},"Functions.html#/s:9OysterKit2ggopyAA4Rule_pAaC_pF":{"name":">>(_:)","abstract":"<p>Creates a new instance of the rule set to have lookahead behaviour</p>"},"Functions.html#/s:9OysterKit1nopyAA4Rule_pAaC_pF":{"name":"!(_:)","abstract":"<p>Creates a new instance of the rule which negates its match."},"Functions.html#/s:9OysterKit1sopyAA4Rule_pAaC_pF":{"name":"-(_:)","abstract":"<p>Creates a new instance of the rule which skips.</p>"},"Functions.html#/s:9OysterKit1topyAA4Rule_pAaC_pF":{"name":"~(_:)","abstract":"<p>Creates a new instance of the rule which scans.</p>"},"Functions.html#/s:9OysterKit2eeoiySbAA9TokenType_p_AaC_ptF":{"name":"==(_:_:)","abstract":"<p>Compares two tokens for equality</p>"},"Extensions/Int.html#/s:Si9OysterKitE8rawValueSivp":{"name":"rawValue","abstract":"<p>Itself</p>","parent_name":"Int"},"Extensions/String.html#/s:9OysterKit8TerminalP16matchDescriptionSSvp":{"name":"matchDescription","parent_name":"String"},"Extensions/String.html#/s:9OysterKit8TerminalP4test5lexer9producingyAA15LexicalAnalyzer_p_AA9TokenType_pSgtKF":{"name":"test(lexer:producing:)","parent_name":"String"},"Extensions/String.html#/s:SS9OysterKitE8rawValueSivp":{"name":"rawValue","abstract":"<p>Returns the <code>hash</code> of the <code>String</code></p>","parent_name":"String"},"Extensions/NSRegularExpression.html#/s:9OysterKit8TerminalP16matchDescriptionSSvp":{"name":"matchDescription","parent_name":"NSRegularExpression"},"Extensions/NSRegularExpression.html#/s:9OysterKit8TerminalP4test5lexer9producingyAA15LexicalAnalyzer_p_AA9TokenType_pSgtKF":{"name":"test(lexer:producing:)","parent_name":"NSRegularExpression"},"Extensions/CharacterSet.html#/s:9OysterKit8TerminalP16matchDescriptionSSvp":{"name":"matchDescription","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:9OysterKit8TerminalP4test5lexer9producingyAA15LexicalAnalyzer_p_AA9TokenType_pSgtKF":{"name":"test(lexer:producing:)","parent_name":"CharacterSet"},"Extensions/Dictionary.html#/s:SD9OysterKitAA14RuleAnnotationORszAA0cD5ValueORs_rlE5errorSSSgvp":{"name":"error","abstract":"<p>Any annotated error message, or nil if not set</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD9OysterKitAA14RuleAnnotationORszAA0cD5ValueORs_rlE5tokenSSSgvp":{"name":"token","abstract":"<p>Any annotated error message, or nil if not set</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD9OysterKitAA14RuleAnnotationORszAA0cD5ValueORs_rlE6pinnedSbvp":{"name":"pinned","abstract":"<p>True if the annotations included the pinned annotation</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD9OysterKitAA14RuleAnnotationORszAA0cD5ValueORs_rlE4voidSbvp":{"name":"void","abstract":"<p>True if the annotations include the void annotation</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD9OysterKitAA14RuleAnnotationORszAA0cD5ValueORs_rlE9transientSbvp":{"name":"transient","abstract":"<p>True if the annotations include the transient annotation</p>","parent_name":"Dictionary"},"Extensions/Collection.html#/s:Sl9OysterKitAA4Node7ElementRpzrlE13combinedRangeSnySS5IndexVGvp":{"name":"combinedRange","abstract":"<p>Returns the combined range of all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code>s in the <code>Collection</code> essentially setting the <code>lowerBound</code> to the lowest of all range, and upperBound to the highest of all ranges.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA14RuleAnnotationO3key_AA0cD5ValueO5valuet7ElementRtzrlE5merge4withSDyAcFGAL_tF":{"name":"merge(with:)","abstract":"<p>Creates a new collection of RuleAnnotations where the merged annotations override those in","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA14RuleAnnotationO3key_AA0cD5ValueO5valuet7ElementRtzrlE15stlrDescriptionSSvp":{"name":"stlrDescription","abstract":"<p>A description in STLR format of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit15RuleAnnotationsa\">RuleAnnotations</a></code></p>","parent_name":"Collection"},"Extensions/Array.html#/s:Sa9OysterKits5Error_pRszlE5rangeSNySS5IndexVGSgvp":{"name":"range","abstract":"<p>Extracts any causal errors from the array and builds a range from them</p>","parent_name":"Array"},"Extensions/Array.html#/s:9OysterKit7GrammarP5rulesSayAA4Rule_pGvp":{"name":"rules","parent_name":"Array"},"Extensions/Array.html#/s:Sa9OysterKitAA4Rule_pRszlE6choiceAaB_pvp":{"name":"choice","abstract":"<p>Creates a rule that is satisfied if one of the rules in the araray","parent_name":"Array"},"Extensions/Array.html#/s:Sa9OysterKitAA4Rule_pRszlE8sequenceAaB_pvp":{"name":"sequence","abstract":"<p>Creates a rule that is satisified if all rules in the array are","parent_name":"Array"},"Extensions/_ParsingDecoder.html#/s:s28SingleValueDecodingContainerP6decodeyqd__qd__mKSeRd__lF":{"name":"decode(_:)","parent_name":"_ParsingDecoder"},"Extensions/Decodable.html#/s:Se9OysterKitE6decode_5usingxSS_AA7Grammar_ptKFZ":{"name":"decode(_:using:)","abstract":"<p>Creates a new instance of the <code>Decodeable</code> using the supplied source and language.</p>","parent_name":"Decodable"},"Extensions/Decodable.html#/s:Se9OysterKitE6decode_4with5usingxSS_qd__mAA7Grammar_ptKAA28DecodeableAbstractSyntaxTreeRd__lFZ":{"name":"decode(_:with:using:)","abstract":"<p>Creates a new instance of the <code>Decodeable</code> using the supplied source and language. You typically do not need to use this","parent_name":"Decodable"},"Extensions/Decodable.html":{"name":"Decodable","abstract":"<p>Makes it possible for any <code>Decodable</code> to be constructed using a source string and language. You can specify your own"},"Extensions/_ParsingDecoder.html":{"name":"_ParsingDecoder","abstract":"<p>Undocumented</p>"},"Extensions/Array.html":{"name":"Array"},"Extensions/Collection.html":{"name":"Collection","abstract":"<p>An extension to make it easy to operate on any collection of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code>s</p>"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Extensions/CharacterSet.html":{"name":"CharacterSet","abstract":"<p>Extends <code>CharacterSet</code> to implement <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Terminal.html\">Terminal</a></code></p>"},"Extensions/NSRegularExpression.html":{"name":"NSRegularExpression","abstract":"<p>Extends <code>NSRegularExpresion</code> to implement <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Terminal.html\">Terminal</a></code></p>"},"Extensions/String.html":{"name":"String","abstract":"<p>Extends <code>String</code> to implement <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Terminal.html\">Terminal</a></code></p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>An extension to allow any <code>Int</code> to be used as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code>.</p>"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO6stringyACSScACmF":{"name":"string(_:)","abstract":"<p>A <code>String</code> value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO4boolyACSbcACmF":{"name":"bool(_:)","abstract":"<p>A <code>Bool</code> value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO3intyACSicACmF":{"name":"int(_:)","abstract":"<p>An <code>Int</code> value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO3setyA2CmF":{"name":"set","abstract":"<p>No value, but the annotation was present</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the annotation value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO5tokenyA2CmF":{"name":"token","abstract":"<p>Token to be created when the rule is matched</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO5erroryA2CmF":{"name":"error","abstract":"<p>An error to be generated when the rule is not matched</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO4voidyA2CmF":{"name":"void","abstract":"<p>Matches will be completely discarded (no node, no adoption of children by parent)</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO9transientyA2CmF":{"name":"transient","abstract":"<p>Token will not be preserved in the AST but it&rsquo;s children should be adopted by the parent node</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO6pinnedyA2CmF":{"name":"pinned","abstract":"<p>Nodes will be created for failed optional matches</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO4typeyA2CmF":{"name":"type","abstract":"<p>The type of the token, used to inform code generation</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO6customyACSS_tcACmF":{"name":"custom(label:)","abstract":"<p>A custom developer defined annotation that your own AST will interpret</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO9hashValueSivp":{"name":"hashValue","abstract":"<p>The searchable hash value of the annotation</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two annotations for equality (not values, but keys)</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the annotation</p>","parent_name":"RuleAnnotation"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO7successyAcA14LexicalContext_p_tcACmF":{"name":"success(context:)","abstract":"<p>The match was successful</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO7consumeyAcA14LexicalContext_p_tcACmF":{"name":"consume(context:)","abstract":"<p>The match was successful but no token should be issued</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO13ignoreFailureyACSS5IndexV_tcACmF":{"name":"ignoreFailure(atIndex:)","abstract":"<p>The match failed, but that failure is OK</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO7failureyACSS5IndexV_tcACmF":{"name":"failure(atIndex:)","abstract":"<p>The match failed</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the result</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO5rangeSS5IndexVvp":{"name":"range","abstract":"<p>The substring of the source that the match was against</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO13matchedStringSSSgvp":{"name":"matchedString","abstract":"<p>The substring of the source that the match was against</p>","parent_name":"MatchResult"},"Enums/Log.html#/s:9OysterKit3LogO7parsingyA2CmF":{"name":"parsing","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO8decodingyA2CmF":{"name":"decoding","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO08_parsingC0So9OS_os_logCvpZ":{"name":"_parsingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO09_decodingC0So9OS_os_logCvpZ":{"name":"_decodingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO07parsingC0So9OS_os_logCvpZ":{"name":"parsingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO08decodingC0So9OS_os_logCvpZ":{"name":"decodingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO6enableyyF":{"name":"enable()","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO7disableyyF":{"name":"disable()","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO18scannedMatchFailedyA2CmF":{"name":"scannedMatchFailed","abstract":"<p>A low level scanner error</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO8internalyACs0D0_p_tcACmF":{"name":"internal(cause:)","abstract":"<p>An internal error (perhaps an exception thrown compiling a regular expression) that can be wrapped","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO9undefinedyACSS_SS5IndexVSays0D0_pGtcACmF":{"name":"undefined(message:at:causes:)","abstract":"<p>An error where no specific error message has been defined</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO8scanningyACSS_SS5IndexVSays0D0_pGtcACmF":{"name":"scanning(message:position:causes:)","abstract":"<p>An error during scanning, with a defined message</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO7parsingyACSS_SNySS5IndexVGSays0D0_pGtcACmF":{"name":"parsing(message:range:causes:)","abstract":"<p>An error during parsing, with a defined message</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO14interpretationyACSS_Says0D0_pGtcACmF":{"name":"interpretation(message:causes:)","abstract":"<p>An error during interpretation of parsed results, with a defined message</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO5fatalyACSS_Says0D0_pGtcACmF":{"name":"fatal(message:causes:)","abstract":"<p>A fatal error that should stop parsing and cause exit to the top</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO7isFatalSbvp":{"name":"isFatal","abstract":"<p><code>true</code> if <code>ProcessingError.fatal</code></p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO4with3and9whenUsing6causesAcA9BehaviourV_SDyAA14RuleAnnotationOAA0kL5ValueOGAA15LexicalAnalyzer_pSays0D0_pGSgtcfc":{"name":"init(with:and:whenUsing:causes:)","abstract":"<p>Constructs a scanning or parsing error (depending on wether or not a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TokenType.html\">TokenType</a></code> is supplied) from the supplied data.</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO8causedBySays0D0_pGSgvp":{"name":"causedBy","abstract":"<p>The errors that caused this error, or nil if this is the root error</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO5rangeSNySS5IndexVGSgvp":{"name":"range","abstract":"<p>The range in the source string that caused this error, or nil (for example an internal error)</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO7messageSSvp":{"name":"message","abstract":"<p>A human readable version of the error message. It does not include any causes","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the error and its causes</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO8filtered7includeACSgSbs0D0_pXE_tF":{"name":"filtered(include:)","abstract":"<p>Filters the error and its caueses by the using the supplied block. Note that internal errors with no","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO8filtered9includingACSgAA0cD4TypeV_tF":{"name":"filtered(including:)","abstract":"<p>Filters this error and all of its causes including only those that are of the types provided</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO8filtered25includingMessagesMatchingACSgSS_tF":{"name":"filtered(includingMessagesMatching:)","abstract":"<p>Filters this error and all of its causes including only those that have messages matching the","parent_name":"ProcessingError"},"Enums/ProcessingError.html#/s:9OysterKit15ProcessingErrorO010processingD4TypeAA0cdF0Vvp":{"name":"processingErrorType","abstract":"<p>The type of the error</p>","parent_name":"ProcessingError"},"Enums/ProcessingError.html":{"name":"ProcessingError","abstract":"<p>A useful standard implementation of <code>TestErrorType</code> that enables the reporting of most kinds of issues</p>"},"Enums/Log.html":{"name":"Log","abstract":"<p>Undocumented</p>"},"Enums/MatchResult.html":{"name":"MatchResult","abstract":"<p>Match results are passed from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code>s to <code>IntermediateRepresentations</code> and provide all information required to create an AST or even begin"},"Enums/RuleAnnotation.html":{"name":"RuleAnnotation","abstract":"<p>An annotation that can be associated with any rule influencing how matches are interpretted and providing additional data about the token. The following annotations represent <q>reserved words</q>, but otherwise you can define any annotations you want.</p>"},"Enums/RuleAnnotationValue.html":{"name":"RuleAnnotationValue","abstract":"<p>Represents the value for a rule annotation</p>"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>The behaviour of the rule</p>","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Annotations on the rule</p>","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC8terminalAA0C0_pvp":{"name":"terminal","abstract":"<p>The acceptable matches that would satisfy this rule</p>","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC_3and3forAcA9BehaviourV_SDyAA0D10AnnotationOAA0dH5ValueOGAA0C0_ptcfc":{"name":"init(_:and:for:)","abstract":"<p>Creates a new instance of the rule with the specified parameteres.</p>","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>Tests the specified terminal exists at the scanner head</p>","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC4rule4with11annotationsAA0D0_pAA9BehaviourVSg_SDyAA0D10AnnotationOAA0dI5ValueOGSgtF":{"name":"rule(with:annotations:)","abstract":"<p>Creates a new instance with the specified behaviour and annoations overriding the current instance&rsquo;s","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the rule</p>","parent_name":"TerminalRule"},"Classes/TerminalRule.html#/s:9OysterKit12TerminalRuleC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abreviated description of the rule</p>","parent_name":"TerminalRule"},"Classes/SequenceRule.html#/s:9OysterKit4RuleP9behaviourAA9BehaviourVvp":{"name":"behaviour","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit4RuleP11annotationsSDyAA0C10AnnotationOAA0cE5ValueOGvp":{"name":"annotations","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit12SequenceRuleC8sequenceSayAA0D0_pGvp":{"name":"sequence","abstract":"<p>Undocumented</p>","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit12SequenceRuleC_3and3forAcA9BehaviourV_SDyAA0D10AnnotationOAA0dH5ValueOGSayAA0D0_pGtcfc":{"name":"init(_:and:for:)","abstract":"<p>Undocumented</p>","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit4RuleP4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit4RuleP4rule4with11annotationsAaB_pAA9BehaviourVSg_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"rule(with:annotations:)","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit12SequenceRuleC11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the rule</p>","parent_name":"SequenceRule"},"Classes/SequenceRule.html#/s:9OysterKit12SequenceRuleC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abreviated description of the rule</p>","parent_name":"SequenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit4RuleP9behaviourAA9BehaviourVvp":{"name":"behaviour","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit4RuleP11annotationsSDyAA0C10AnnotationOAA0cE5ValueOGvp":{"name":"annotations","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit13ReferenceRuleC10referencesAA0D0_pvp":{"name":"references","abstract":"<p>Undocumented</p>","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit13ReferenceRuleC_3and3forAcA9BehaviourV_SDyAA0D10AnnotationOAA0dH5ValueOGAA0D0_ptcfc":{"name":"init(_:and:for:)","abstract":"<p>Undocumented</p>","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit4RuleP4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit4RuleP4rule4with11annotationsAaB_pAA9BehaviourVSg_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"rule(with:annotations:)","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit13ReferenceRuleC11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the rule</p>","parent_name":"ReferenceRule"},"Classes/ReferenceRule.html#/s:9OysterKit13ReferenceRuleC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abreviated description of the rule</p>","parent_name":"ReferenceRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC7stubFor4withAcA9BehaviourV_SDyAA0D10AnnotationOAA0dI5ValueOGtcfc":{"name":"init(stubFor:with:)","abstract":"<p>Creates a new instance of a rule. If you use this initializer then you should subsequently (when possible) set <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC09surrogateD0AA0D0_pSgvp\">surrogateRule</a></code></p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC09surrogateD0AA0D0_pSgvp":{"name":"surrogateRule","abstract":"<p>The rule, which can be assigned at any point before actual parsing, to be used. When a new value is assigned to the rule a","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abreviated description of the rule</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>Delegated to the the surrogate rule</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit4RuleP5match4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>Delegated to the the surrogate rule</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Delegated to the the surrogate rule</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC4rule4with11annotationsAA0D0_pAA9BehaviourVSg_SDyAA0D10AnnotationOAA0dI5ValueOGSgtF":{"name":"rule(with:annotations:)","abstract":"<p>Creates a new instance of itself</p>","parent_name":"RecursiveRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Annotations for the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>Behaviour for the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC7matcheryyAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKcvp":{"name":"matcher","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit4Testa\">Test</a></code> closure used by the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC4with3and5usingAcA9BehaviourV_SDyAA0D10AnnotationOAA0dI5ValueOGyAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKctcfc":{"name":"init(with:and:using:)","abstract":"<p>Create a an instance supplied annotations and token that will use the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit4Testa\">Test</a></code> closure","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC4rule4with11annotationsAA0D0_pAA9BehaviourVSg_SDyAA0D10AnnotationOAA0dI5ValueOGSgtF":{"name":"rule(with:annotations:)","abstract":"<p>This function should create a new instance of this rule, replacing the behaviour and","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>This function implements the actual test. It is responsible soley for performing","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abreviated description of the rule</p>","parent_name":"ClosureRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>The behaviour of the rule</p>","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Annotations on the rule</p>","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC7choicesSayAA0D0_pGvp":{"name":"choices","abstract":"<p>The acceptable matches that would satisfy this rule</p>","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC_3and3forAcA9BehaviourV_SDyAA0D10AnnotationOAA0dH5ValueOGSayAA0D0_pGtcfc":{"name":"init(_:and:for:)","abstract":"<p>Creates a new instance of the rule with the specified parameteres.</p>","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>The test will be satisfied if any one of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC7choicesSayAA0D0_pGvp\">choices</a></code> are satisfied. The child rules are evaluated","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC4rule4with11annotationsAA0D0_pAA9BehaviourVSg_SDyAA0D10AnnotationOAA0dI5ValueOGSgtF":{"name":"rule(with:annotations:)","abstract":"<p>Creates a new instance with the specified behaviour and annoations overriding the current instance&rsquo;s","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the rule</p>","parent_name":"ChoiceRule"},"Classes/ChoiceRule.html#/s:9OysterKit10ChoiceRuleC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>An abreviated description of the rule</p>","parent_name":"ChoiceRule"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC7Elementa":{"name":"Element","abstract":"<p>The iterator generates elements of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit13StreamedTokena\">StreamedToken</a></code></p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC13parsingErrorsSays5Error_pGvp":{"name":"parsingErrors","abstract":"<p>Any errors encountered during parsing</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorCACycfc":{"name":"init()","abstract":"<p>DO NOT CALL**</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC4nextAA29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeVSgyF":{"name":"next()","abstract":"<p>Fetches the next matching token</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC17reachedEndOfInputSbvp":{"name":"reachedEndOfInput","abstract":"<p>True if parsing reached the end of input naturally (that is, encountered no errors)</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit26IntermediateRepresentationP10evaluatingyyAA9TokenType_pF":{"name":"evaluating(_:)","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit26IntermediateRepresentationP9succeeded5token11annotations5rangeyAA9TokenType_p_SDyAA14RuleAnnotationOAA0kL5ValueOGSnySS5IndexVGtF":{"name":"succeeded(token:annotations:range:)","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit26IntermediateRepresentationP6failedyyF":{"name":"failed()","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC13willBuildFrom6source4withySS_AA7Grammar_ptF":{"name":"willBuildFrom(source:with:)","abstract":"<p>Sets the initial depth to 1</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC8didBuildyyF":{"name":"didBuild()","abstract":"<p>Disables further evaluation</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC10resetStateyyF":{"name":"resetState()","abstract":"<p>Disables further evaluation</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStream.html#/s:9OysterKit11TokenStreamC8Iteratora":{"name":"Iterator","abstract":"<p>The iterator implementation to use</p>","parent_name":"TokenStream"},"Classes/TokenStream.html#/s:9OysterKit11TokenStreamC_5usingACSS_AA7Grammar_ptcfc":{"name":"init(_:using:)","abstract":"<p>Undocumented</p>","parent_name":"TokenStream"},"Classes/TokenStream.html#/s:9OysterKit11TokenStreamC_5using4withACSS_AA7Grammar_pxmtcAA15LexicalAnalyzerRzlufc":{"name":"init(_:using:with:)","abstract":"<p>Undocumented</p>","parent_name":"TokenStream"},"Classes/TokenStream.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"TokenStream"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC10memorySize7breadthACyxq_q0_GSi_Sitcfc":{"name":"init(memorySize:breadth:)","abstract":"<p>Creates a new instance of the cache</p>","parent_name":"StateCache"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC8remember2at3key5valueyx_q_q0_tF":{"name":"remember(at:key:value:)","abstract":"<p>Adds new entry to the cache. This may knock out something already in the cache.</p>","parent_name":"StateCache"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC6recall2at3keyq0_Sgx_q_tF":{"name":"recall(at:key:)","abstract":"<p>Retreives the cached entry with the specified key and position if any</p>","parent_name":"StateCache"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the cache</p>","parent_name":"StateCache"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackCACyxGycfc":{"name":"init()","abstract":"<p>Creates a new instance of the stack with an active context</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC5resetyyF":{"name":"reset()","abstract":"<p>Removes all current stack entries and adds a new initial context</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC4pushyyF":{"name":"push()","abstract":"<p>Adds a new context to the top of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC3popAA0cD5EntryCyxGyF":{"name":"pop()","abstract":"<p>Removes the stack entry from the top of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC3topAA0cD5EntryCyxGSgvp":{"name":"top","abstract":"<p>The entry currently on the top of the stack, if any</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC5depthSivp":{"name":"depth","abstract":"<p>The depth of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC3allSayAA0cD5EntryCyxGGvp":{"name":"all","abstract":"<p>An inverted (from deepest to shallowest) representation of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC5nodesSayxGvp":{"name":"nodes","abstract":"<p>The child nodes of this node</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC6appendyyxF":{"name":"append(_:)","abstract":"<p>Should be called when a child node is created</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC5adoptyySayxGF":{"name":"adopt(_:)","abstract":"<p>Adds all of the supplied nodes as this nodes children</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the context</p>","parent_name":"NodeStackEntry"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV5tokenAA9TokenType_pvp":{"name":"token","abstract":"<p>The token created</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range of the match in the source string</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV8childrenSayAEGvp":{"name":"children","abstract":"<p>Children of this node</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV11annotationsSDyAA14RuleAnnotationOAA0kL5ValueOGvp":{"name":"annotations","abstract":"<p>Any associated annotations made on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV5tokenAA9TokenType_pvp\">token</a></code></p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV3for2at11annotationsAeA9TokenType_p_SnySS5IndexVGSDyAA14RuleAnnotationOAA0pQ5ValueOGtcfc":{"name":"init(for:at:annotations:)","abstract":"<p>Creates a new instance with no <code>value</code></p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV3for2at8children11annotationsAeA9TokenType_p_SnySS5IndexVGSayAEGSDyAA14RuleAnnotationOAA0qR5ValueOGtcfc":{"name":"init(for:at:children:annotations:)","abstract":"<p>Creates a new instance</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC17ConstructionErrora":{"name":"ConstructionError","abstract":"<p>Errors that can occur during AST creation</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html":{"name":"IntermediateRepresentationNode","abstract":"<p>An entry in the tree.</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC6errorsSays5Error_pGvp":{"name":"errors","abstract":"<p>The errors generated during parsing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorCACycfc":{"name":"init()","abstract":"<p>Creates a new instance, preparing to parse the supplied source</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC4withACSS_tcfc":{"name":"init(with:)","abstract":"<p>Used for testing, creates a new blank instance for manipulation</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_5using4fromAExxm_q_mSSAA7Grammar_ptKSeRzAA010DecodeablecdE0R_r0_lF":{"name":"build(_:using:from:using:)","abstract":"<p>Constructs a heterogenous AST by first constructing the specified DecodableAbstractSyntaxTree (meeting the requirements of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ParsingDecoder.html\">ParsingDecoder</a></code> class).","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC15initializeCache5depth7breadthySi_SitF":{"name":"initializeCache(depth:breadth:)","abstract":"<p>Creates a new empty cache. By default a cache is not used, but this can speed up processing of nodes where there can be","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_4from5usingxxm_SSAA7Grammar_ptKSeRzlF":{"name":"build(_:from:using:)","abstract":"<p>Constructs a heterogenous AST by first constructing a <code>HomogenousAbstractSyntaxTree</code> which is then passed to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ParsingDecoder.html\">ParsingDecoder</a></code> to leverage","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_4from5usingxxm_SSAA7Grammar_ptKAA0cdE0RzlF":{"name":"build(_:from:using:)","abstract":"<p>Constructs a homogenous AST from the supplied source and language. You typically do not need to use this method (where you are","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_5usingAA010HomogenousE0VSS_AA7Grammar_ptKF":{"name":"build(_:using:)","abstract":"<p>Constructs a homogenous AST from the supplied source and language.</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build5usingAA010HomogenousE0VAA7Grammar_p_tKF":{"name":"build(using:)","abstract":"<p>Constructs a homogenous AST from the supplied language.</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC13willBuildFrom6source4withySS_AA7Grammar_ptF":{"name":"willBuildFrom(source:with:)","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit26IntermediateRepresentationP10evaluatingyyAA9TokenType_pF":{"name":"evaluating(_:)","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit26IntermediateRepresentationP9succeeded5token11annotations5rangeyAA9TokenType_p_SDyAA14RuleAnnotationOAA0kL5ValueOGSnySS5IndexVGtF":{"name":"succeeded(token:annotations:range:)","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit26IntermediateRepresentationP6failedyyF":{"name":"failed()","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC8didBuildyyF":{"name":"didBuild()","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC10resetStateyyF":{"name":"resetState()","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC6stringSSvp":{"name":"string","abstract":"<p>The string being scanned</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC12scanLocationSS5IndexVvp":{"name":"scanLocation","abstract":"<p>The current scanning index in <code>scalars</code></p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC7isAtEndSbvp":{"name":"isAtEnd","abstract":"<p><code>true</code> if the scanner is at the end of the <code>String</code></p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerCyACSScfc":{"name":"init(_:)","abstract":"<p>Create a new instance of the class.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC11descriptionSSvp":{"name":"description","abstract":"<p>A useful description of the state of the scanner</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC8scanNexts7UnicodeO6ScalarVSgyF":{"name":"scanNext()","abstract":"<p>Advances the scan-head by one position. If it is at the end of the String it will not move (that is the scan-head will not advance past the last character in the <code>String</code>.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan17regularExpressionSbSo09NSRegularG0C_tF":{"name":"scan(regularExpression:)","abstract":"<p>Scans for the supplied regular expression. If the expression is matched the scanner location will be at the end of the match</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan14charactersFromSb10Foundation12CharacterSetV_tF":{"name":"scan(charactersFrom:)","abstract":"<p>Scans all characters from the supplied set, continuing until the scanner hits a character not in the set.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan13characterFromSb10Foundation12CharacterSetV_tF":{"name":"scan(characterFrom:)","abstract":"<p>Scans a single character from the supplied set</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC8scanUpTo13characterFromSb10Foundation12CharacterSetV_tF":{"name":"scanUpTo(characterFrom:)","abstract":"<p>Advances the scan-head until a character from the supplied <code>CharacterSet</code> is found, or the end of the <code>String</code> is reached.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC8scanUpTo6stringSbSS_tF":{"name":"scanUpTo(string:)","abstract":"<p>Advances the scan-head until a character from the supplied <code>String</code> is found, or the end of the <code>String</code> is reached.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan6stringSbSS_tF":{"name":"scan(string:)","abstract":"<p>Advances the scan-head to the end of the supplied string providing it matches.</p>","parent_name":"StringScanner"},"Classes/Lexer.html#/s:9OysterKit5LexerC4skip10Foundation12CharacterSetVSgvp":{"name":"skip","abstract":"<p>If set, any characters in this set will be skipped when  <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC4markyyF\">mark()</a></code> is called</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC6sourceACSS_tcfc":{"name":"init(source:)","abstract":"<p>Creates a new instance of <code>Lexer</code> for the supplied <code>String</code>.</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8positionSivp":{"name":"position","abstract":"<p>The integer offset of the current position in characters from the beginning of the <code>String</code> being scanned</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC5depthSivp":{"name":"depth","abstract":"<p>The current depth of the <code>Mark</code> stack used for unwinding failed rules</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC7currentSSvp":{"name":"current","abstract":"<p>The character at the current scanning position</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4markyyF":{"name":"mark()","abstract":"<p>Mark the position of the scanner. It should be noted that at this point any characters matching <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC4skip10Foundation12CharacterSetVSgvp\">skip</a></code> will be skipped. There","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4mark8skippingySb_tF":{"name":"mark(skipping:)","abstract":"<p>Mark the position of the scanner. It should be noted that at this point any characters matching <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC4skip10Foundation12CharacterSetVSgvp\">skip</a></code> will be skipped. There","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC6rewindyyF":{"name":"rewind()","abstract":"<p>Unwind the current scanning state to the previous position. Typically used when a scan for a match has failed and it is","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC7proceedAA14LexicalContext_pyF":{"name":"proceed()","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html\">LexicalContext</a></code> from the start of top mark to the current scanner position. The mark is removed from the stack","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC7consumeyyF":{"name":"consume()","abstract":"<p>Removes the top most <code>Mark</code> from the stack without creating a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html\">LexicalContext</a></code> effectively advancing the scanning position","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC11fastForwardAA14LexicalContext_pyF":{"name":"fastForward()","abstract":"<p>Removes the top most <code>Mark</code> from the stack without creating a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html\">LexicalContext</a></code> effectively advancing the scanning position","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC10endOfInputSbvp":{"name":"endOfInput","abstract":"<p><code>true</code> if the end of the <code>String</code> being scanned has been reached</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4scan8terminalySS_tKF":{"name":"scan(terminal:)","abstract":"<p>Scans until the specified terminal is reached in the source <code>String</code>. If the end of the <code>String</code> is reached before","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4scan5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scan(oneOf:)","abstract":"<p>Scans until one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8scanUpTo8terminalySS_tKF":{"name":"scanUpTo(terminal:)","abstract":"<p>Scans up to (that is, the position of the scanner will be at the start of the match, not after it) the supplied <code>String</code>. If the terminal is not found","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8scanUpTo5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scanUpTo(oneOf:)","abstract":"<p>Scans up to one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4scan17regularExpressionySo09NSRegularF0C_tKF":{"name":"scan(regularExpression:)","abstract":"<p>Scan the supplied regular expression (<code>NSRegularExpression</code>). If not found an <code>Error</code> should be the thrown. The scanner","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8scanNextyyKF":{"name":"scanNext()","abstract":"<p>Advances the scanner one character. If the end of the source <code>String</code> has already been reached a <code>GrammarException</code> will be thrown.</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerCySSSnySS5IndexVGcip":{"name":"subscript(_:)","abstract":"<p>Returns the <code>String</code> from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC6sourceSSvp\">source</a></code> representing the supplied range.</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC6sourceSSvp":{"name":"source","abstract":"<p>The <code>String</code> currently being scanned</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC11descriptionSSvp":{"name":"description","abstract":"<p>A description of the current state of the <code>Lexer</code></p>","parent_name":"Lexer"},"Classes/Lexer.html":{"name":"Lexer","abstract":"<p><code>Lexer</code> provides a concrete implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> protocol and is used by default for the rest of the OysterKit stack (for example"},"Classes/StringScanner.html":{"name":"StringScanner","abstract":"<p>A pure Swift implementation of a <code>String</code> scanner, that can leverage some of the strengths of swift (over using <code>NSScanner</code>). In general consumers of"},"Classes/AbstractSyntaxTreeConstructor.html":{"name":"AbstractSyntaxTreeConstructor","abstract":"<p>AbstractSyntaxTreeConstructor is an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code> responsible for briding between the parsing results and an AbstractSyntaxTree."},"Classes/NodeStackEntry.html":{"name":"NodeStackEntry","abstract":"<p><code>NodeStackEntry</code>&lsquo;s are used to capture parsing context (for example child-nodes and errors) ASTs are constructed.</p>"},"Classes/NodeStack.html":{"name":"NodeStack","abstract":"<p>A <code>NodeStack</code> can be used to manage AST construction state, as new rule evaluations begin new contexts can be pushed onto the node stack and then popped and discarded on failure, or popped and acted on for success.</p>"},"Classes/StateCache.html":{"name":"StateCache","abstract":"<p>A generic cache that can be used in your own <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code></p>"},"Classes/TokenStream.html":{"name":"TokenStream","abstract":"<p>A <code>TokenStream</code> provides lazy iterators that minimize memory consumption and overhead allowing you to iterate through the tokens created by the"},"Classes/TokenStreamIterator.html":{"name":"TokenStreamIterator","abstract":"<p>The Iterator created by token streams</p>"},"Classes/ChoiceRule.html":{"name":"ChoiceRule","abstract":"<p>A <code>ChoiceRule</code> will match if one of the child rules is matched. It can be thought of as a logical OR.</p>"},"Classes/ClosureRule.html":{"name":"ClosureRule","abstract":"<p>An implementation of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code> that allows the specification of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit4Testa\">Test</a></code>"},"Classes/RecursiveRule.html":{"name":"RecursiveRule","abstract":"<p>When a rule definition calls itself whilst evaluating itself (left hand recursion) you cannot create the rule directly as it will become caught in an infinite look (creating instances of itself, which create instances of itself etc until the stack is empty).  To avoid this a rule can use this wrapper to manage lazy initialization of itself. The recursive rule enables a reference to be added on the RHS, but the actual rule will not be initiialized until later, and this wrapper will then call that lazily initalized rule.</p>"},"Classes/ReferenceRule.html":{"name":"ReferenceRule","abstract":"<p>Undocumented</p>"},"Classes/SequenceRule.html":{"name":"SequenceRule","abstract":"<p>Undocumented</p>"},"Classes/TerminalRule.html":{"name":"TerminalRule","abstract":"<p>A rule that matches the specified Terminal</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}